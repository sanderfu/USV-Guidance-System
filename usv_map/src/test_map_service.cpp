#include "ros/ros.h"
#include "usv_map/intersect.h"
#include "gdal/ogrsf_frmts.h"
#include "usv_map/map_service.h"

int main(int argc, char** argv) {
    ros::init(argc,argv,"test_map_service");
    ros::NodeHandle nh("test_map_service");
    MapServiceClient map_service_client(&nh);

    const char* collision_wkt_one = "LINESTRING (-73.9807158728843 40.5631358953817,-73.9807399053637 40.5623668560404,-73.9809802301578 40.5621745962051,-73.9813166848696 40.5617780602948,-73.9813407173491 40.5610450696727)";
    const char* collision_wkt_two = "LINESTRING (-73.9895598253088 40.5618621739727,-73.9884663474954 40.56320799282,-73.9885384449337 40.564517762948,-73.9872767397644 40.565503094604,-73.9863635055467 40.5667407672939,-73.9831191208257 40.5669690758483,-73.9812686199108 40.5664043125821,-73.9807158728843 40.5654309971658,-73.979946833543 40.5650344612555,-73.9779040727928 40.5655271270834,-73.9754046949337 40.5654430134055,-73.9717637743024 40.5650584937349,-73.9689279417315 40.5657554356379,-73.9666328399474 40.5662961664247,-73.9661281578797 40.5645417954275)";
    const char* collision_point = "POINT (-73.9813407173491 40.5610450696727)";
    const char* non_collision_point = "POINT (-73.9807158728843 40.5631358953817)";
    const char* non_collision_wkt = "LINESTRING (-73.9880097303866 40.5568273695354,-73.9876011782365 40.5585096430944,-73.9866518952997 40.559879494421,-73.9855464012466 40.5605524038447,-73.9847172807068 40.5614175731036,-73.9840443712832 40.5619583038904,-73.9833834780993 40.5622587098831,-73.9828066985933 40.5626071808346,-73.9819415293344 40.5625951645949,-73.981424831027 40.5623548398007,-73.9802232070563 40.5622587098831,-73.9793700540371 40.563039765464,-73.9781804463061 40.5637967885656,-73.9770268872942 40.5635804962509,-73.9758733282823 40.5627994406699,-73.975188402619 40.561850157733,-73.9749240453454 40.5599035269005,-73.9749360615851 40.5583894806974,-73.9749841265439 40.5558059891603,-73.975512841091 40.5549408199014,-73.9777478616766 40.5544121053543,-73.9798266711459 40.5543520241557,-73.9811244250343 40.5547725925455,-73.9822779840462 40.555733891722,-73.9837199328111 40.5561664763515,-73.9856184986848 40.5552772746132,-73.9870604474497 40.5541477480807,-73.9883582013381 40.5542078292792)";
    
    OGRLineString col_line_1;
    col_line_1.importFromWkt(&collision_wkt_one);
    OGRLineString col_line_2;
    col_line_2.importFromWkt(&collision_wkt_two);
    OGRPoint col_point;
    col_point.importFromWkt(&collision_point);
    OGRPoint noncol_point;
    noncol_point.importFromWkt(&non_collision_point);
    OGRLineString noncol_line;
    noncol_line.importFromWkt(&non_collision_wkt);

    std::cout << "Col line 1: " << static_cast<int>(map_service_client.collision(&col_line_1)) << std::endl;
    std::cout << "Col line 2: " << static_cast<int>(map_service_client.collision(&col_line_2)) << std::endl;
    std::cout << "Col point : " << static_cast<int>(map_service_client.collision(&col_point)) << std::endl;
    std::cout << "Noncol point: " << static_cast<int>(map_service_client.collision(&noncol_point)) << std::endl;
    std::cout << "Noncol line: " << static_cast<int>(map_service_client.collision(&noncol_line)) << std::endl;
}