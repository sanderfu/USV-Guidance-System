<launch>
  <!--Map specific parameters-->
  <arg name="preprocessed_map" default="true" />
  <arg name="map_name" default="outside_ny_max_300" />
  <arg name="map_extent" default="[0,0,0,0]" />

  <!--Mission specific parameters USV-->
  <arg name="usv_id" default="0" />
  <arg name="usv_desired_speed" default="5" />
  <arg name="usv_predefined_mission" default="true" />
  <arg name="usv_predefined_mission_name" default="usv_headon" />
  <arg name="usv_goal_pose" default="[0,0,0]" />
  <arg name="usv_initial_pose" default="[-73.875040779,40.553142487,0]" />

  <!--Mission specific parameters OBSTACLE-->
  <arg name="obstacle_id" default="1" />
  <arg name="obstacle_desired_speed" default="5" />
  <arg name="obstacle_predefined_mission" default="true" />
  <arg name="obstacle_predefined_mission_name" default="obstacle_headon" />
  <arg name="obstacle_goal_pose" default="[0,0,0]" />
  <arg name="obstacle_initial_pose" default="[-73.858437202,40.558856560,-3.14]" />

  <!--Monte Carlo Specific Parameters-->
  <arg name="simulation_collection_name" default="colav_headon_"/>
  <arg name="simulations" default="10"/>

  <!--Simulation specific parameters (do not affect the guidance system in any way)-->
  <arg name="vessel_model_file" default="$(find usv_simulator)/config/models/viknes.urdf" />
  <arg name="obstacle_model_file" default="$(find usv_simulator)/config/models/ship1.urdf" />
  <arg name="sim_origin" default="[-74.001588,40.590419,0]" /> 

  <arg name="usv_name" default="Viknes830" />
  <arg name="obstacle_name" default="ship1" />

  <group ns="$(arg usv_name)">
      <param name="id" type="int" value = "$(arg usv_id)"/>
      <param name="preprocessed_map" type="bool" value = "$(arg preprocessed_map)"/>
      <param name="map_name" type="str" value = "$(arg map_name)"/>
      <param name="map_extent" type="yaml" value = "$(arg map_extent)"/>
      <param name="desired_speed" type="double" value = "$(arg usv_desired_speed)"/>

      <param name="predefined_mission" type="bool" value = "$(arg usv_predefined_mission)"/>
      <param name="predefined_mission_name" type="str" value = "$(arg usv_predefined_mission_name)"/>
      <param name="goal_pose" type="yaml" value = "$(arg usv_goal_pose)"/>
      <param name="initial_pose" type="yaml" value = "$(arg usv_initial_pose)"/>

      <param name="simulation_collection_name" type="str" value = "$(arg simulation_collection_name)"/>
      <param name="simulations" type="int" value = "$(arg simulations)"/>

      <param name="sim_origin" type="yaml" value = "$(arg sim_origin)"/>
      <include file="$(find usv_map)/launch/default.launch"/>

      <node pkg="usv_simulator"
            name="sim"
            type="sim_vessel_node"
            respawn="false"
            output="screen">
      </node>
      
      <node pkg="usv_path_trackers"
            name="LOSNode"
            type="los_controller_node.py"
            respawn="false"
            output="screen">
      </node>
      
      <param name="robot_description" textfile="$(arg vessel_model_file)" />
      <node pkg="robot_state_publisher"
          type="robot_state_publisher"
          name="tf_broadcaster" />

      <include file="$(find usv_mission_planner)/launch/mission_planner.launch"/>

      <node pkg="usv_colav"
            name="sb_mpc"
            type="sb_mpc_node"
            respawn="false"
            output="screen">
      </node>
      
      
      <node pkg="rviz"
        type="rviz"
        name="rviz"
        args="-d $(find usv_simulator)/config/rviz/default.rviz" />

      <node pkg="usv_simulator"
            name="land"
            type="sim_land_node"
            respawn="false"
            output="screen">
      </node>

      <rosparam command="load" file="$(find usv_simulator)/config/monte_carlo_supervisor/leader.yaml" />
      <node pkg="usv_simulator"
            name="monte_carlo_supervisor"
            type="monte_carlo_supervisor_node"
            respawn="false"
            output="screen"
            required="true">
      </node>

      <node pkg="usv_simulator"
            name="system_visualization"
            type="sim_system_visualization_node"
            respawn="false"
            output="screen">
      </node>

      <include file="$(find usv_realtime_recorder)/launch/recorder.launch"/>
  </group>


  <group ns="$(arg obstacle_name)">
      <param name="id" type="int" value = "$(arg obstacle_id)"/>
      <param name="preprocessed_map" type="bool" value = "$(arg preprocessed_map)"/>
      <param name="map_name" type="str" value = "$(arg map_name)"/>
      <param name="map_extent" type="yaml" value = "$(arg map_extent)"/>
      <param name="desired_speed" type="double" value = "$(arg obstacle_desired_speed)"/>

      <param name="predefined_mission" type="bool" value = "$(arg obstacle_predefined_mission)"/>
      <param name="predefined_mission_name" type="str" value = "$(arg obstacle_predefined_mission_name)"/>
      <param name="goal_pose" type="yaml" value = "$(arg obstacle_goal_pose)"/>
      <param name="initial_pose" type="yaml" value = "$(arg obstacle_initial_pose)"/>

      <param name="simulation_collection_name" type="str" value = "$(arg simulation_collection_name)"/>
      <param name="simulations" type="int" value = "$(arg simulations)"/>

      <param name="sim_origin" type="yaml" value = "$(arg sim_origin)"/>
      <include file="$(find usv_map)/launch/default.launch"/>

      <node pkg="usv_simulator"
            name="sim"
            type="sim_vessel_node"
            respawn="false"
            output="screen">
      </node>
      
      <node pkg="usv_path_trackers"
            name="LOSNode"
            type="los_controller_node.py"
            respawn="false"
            output="screen">
      </node>
      
      <param name="robot_description" textfile="$(arg vessel_model_file)" />
      <node pkg="robot_state_publisher"
          type="robot_state_publisher"
          name="tf_broadcaster" />

      <include file="$(find usv_mission_planner)/launch/mission_planner.launch"/>

      <node pkg="usv_simulator"
            name="land"
            type="sim_land_node"
            respawn="false"
            output="screen">
      </node>

      <node pkg="usv_simulator"
            name="sim_tracker"
            type="sim_tracker_node"
            respawn="false"
            output="screen">
      </node>

      <rosparam command="load" file="$(find usv_simulator)/config/monte_carlo_supervisor/follower_1.yaml" />
      <node pkg="usv_simulator"
            name="monte_carlo_supervisor"
            type="monte_carlo_supervisor_node"
            respawn="false"
            output="screen"
            required="true">
      </node>

      <node pkg="usv_simulator"
            name="system_visualization"
            type="sim_system_visualization_node"
            respawn="false"
            output="screen">
      </node>
  </group>
  
  
  



  
    
</launch>
