<launch>
  <arg name="u_d" default="3.0" />
  <!--<arg name="vessel_param_file" default="$(find usv_simulator)/config/parameters/viknes.yaml" />-->
  <arg name="vessel_model_file" default="$(find usv_simulator)/config/models/viknes.urdf" />
  <arg name="obstacle_model_file" default="$(find usv_simulator)/config/models/ship1.urdf" />
  <arg name="initial_position_usv" default="[-73.992672031393, 40.5392896676828, 0]" />
  <arg name="initial_position_obstacle" default="[-73.9799828822622,40.5432309943067, 0]" />
  <arg name="use_vo" default="False" />
  <arg name="use_sb_mpc" default="True" />
  <arg name="shipname" default="Viknes830" />

  <include file="$(find usv_map)/launch/default.launch"/>

  <group ns="$(arg shipname)">
      <arg name="waypoint_file" default="head_on_usv.csv" />
      <param name="waypoint_file" value="$(arg waypoint_file)"/>
      <param name="initial_position" type="yaml" value = "$(arg initial_position_usv)"/>
      <node pkg="usv_simulator"
            name="sim"
            type="sim_vessel_node"
            respawn="false"
            output="screen">
      </node>

      <node pkg="usv_path_trackers"
            name="LOSNode"
            type="los_controller_node.py"
            respawn="false"
            output="screen">
      </node>

      <param name="robot_description" textfile="$(arg vessel_model_file)" />
      <node pkg="robot_state_publisher"
          type="robot_state_publisher"
          name="tf_broadcaster" />

      <node pkg="usv_mission_planner"
            name="mission_planner"
            type="static_mission_planner_node.py"
            respawn="false"
            output="screen">
      </node>

      <node pkg="usv_colav"
            name="sb_mpc"
            type="sb_mpc_node"
            respawn="false"
            output="screen">
      </node>

      <node pkg="rviz"
        type="rviz"
        name="rviz"
        args="-d $(find usv_simulator)/config/rviz/default.rviz" />

  </group>

   <group ns="ship1">
      <arg name="waypoint_file" default="head_on_obst.csv" />
      <param name="waypoint_file" value="$(arg waypoint_file)"/>
      <param name="initial_position" type="yaml" value = "$(arg initial_position_obstacle)"/>
      <node pkg="usv_simulator"
            name="sim"
            type="sim_vessel_node"
            respawn="false"
            output="screen">
      </node>

      <node pkg="usv_path_trackers"
            name="LOSNode"
            type="los_controller_node.py"
            respawn="false"
            output="screen">
      </node>

      <param name="robot_description" textfile="$(arg obstacle_model_file)" />
      <node pkg="robot_state_publisher"
          type="robot_state_publisher"
          name="tf_broadcaster" />

      <node pkg="usv_mission_planner"
            name="mission_planner"
            type="static_mission_planner_node.py"
            respawn="false"
            output="screen">
      </node>

      <param name="id" value="1"/>
      <node pkg="usv_simulator"
            name="sim_tracker"
            type="sim_tracker_node"
            respawn="false"
            output="screen">
      </node>

  </group>

      <node pkg="usv_simulator"
            name="land"
            type="sim_land_node"
            respawn="false"
            output="screen">
      </node>

  <!--<group if="$(arg use_vo)">
    <node pkg="asv_ctrl_vo"
          name="vo_node"
          type="asv_ctrl_vo_node"
          respawn="false"
          output="screen" />
  </group>
  -->

  <!-- <group if="$(arg use_sb_mpc)">
    <node pkg="asv_ctrl_sb_mpc"
          name="sb_mpc_node"
          type="asv_ctrl_sb_mpc_node"
          respawn="false"
          output="screen" />
  </group>
  -->
    
</launch>
